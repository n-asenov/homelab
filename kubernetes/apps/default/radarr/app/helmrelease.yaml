---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: radarr
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  values:
    controllers:
      radarr:
        pod:
          securityContext:
            runAsNonRoot: true
            runAsUser: 911
            runAsGroup: 911
            fsGroup: 911
            fsGroupChangePolicy: OnRootMismatch
        containers:
          app:
            image:
              repository: ghcr.io/home-operations/radarr
              tag: 5.23.1.9914@sha256:9e7c9a048d63b0b9d8e4266561cf336ceecaec047fbc2508dcfe417e0f326cef
            env:
              TZ: Europe/Sofia
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: 7878
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 256Mi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL

    service:
      app:
        controller: radarr
        ports:
          http:
            port: 80
            targetPort: 7878

    route:
      app:
        hostnames:
          - radarr.nasenov.dev
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - name: radarr
                port: 80

    persistence:
      config:
        type: persistentVolumeClaim
        storageClass: ceph-block
        dataSourceRef:
          apiGroup: volsync.backube
          kind: ReplicationDestination
          name: radarr-dst
        accessMode: ReadWriteOnce
        size: 1Gi
      media:
        enabled: true
        type: nfs
        server: 192.168.0.15
        path: /mnt/tank/media
        globalMounts:
          - path: /data
